<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

<!-- Put site-specific property overrides in this file. -->

<configuration>
<property>
  <name>dfs.replication</name>
  <value>{{ hadoop_hdfs['dfs_replication'] }}</value>
</property>
<property>
  <name>dfs.permissions</name>
  <value>false</value>
</property>
<property>
   <name>dfs.datanode.data.dir</name>
   <value>{% for data_dir in hadoop_hdfs['dfs_dir_datanode'] %}{% if not loop.first and flag == 1 %},{% else %}{% set flag=1 %}{% endif %}{{ data_dir }}{% endfor %}</value>
</property>
<property>
        <name>dfs.namenode.data.dir</name>
        <value>{% for data_dir_parent in hadoop_hdfs['dfs_dir_parent'] %}{% if not loop.first and flag == 1 %},{% else %}{% set flag=1 %}{% endif %}{{ data_dir_parent }}{{ hadoop_hdfs['dfs_dir_namenode'] }}{% endfor %}</value>
</property>
<property>
  <name>dfs.nameservices</name>
  <value>vfintrahdfs</value>
</property>
<property>
  <name>dfs.ha.namenodes.vfintrahdfs</name>
  <value>nn1,nn2</value>
</property>
<property>
  <name>dfs.namenode.rpc-address.vfintrahdfs.nn1</name>
  <value>{% for server in groups['hadoop-namenode'] %}{% if not loop.first and flag == 1 %},{% else %}{% set flag=1 %}{% endif %}{{ hostvars[server].hostname }}{% endfor %}:58888</value>
</property>
<property>
  <name>dfs.namenode.rpc-address.vfintrahdfs.nn2</name>
  <value>{% for server in groups['hadoop-secondarynamenode'] %}{% if not loop.first and flag == 1 %},{% else %}{% set flag=1 %}{% endif %}{{ hostvars[server].hostname }}{% endfor %}:58888</value>
</property>
<property>
  <name>dfs.namenode.http-address.vfintrahdfs.nn1</name>
  <value>{% for server in groups['hadoop-namenode'] %}{% if not loop.first and flag == 1 %},{% else %}{% set flag=1 %}{% endif %}{{ hostvars[server].hostname }}{% endfor %}:51070</value>
</property>
<property>
  <name>dfs.namenode.http-address.vfintrahdfs.nn2</name>
  <value>{% for server in groups['hadoop-secondarynamenode'] %}{% if not loop.first and flag == 1 %},{% else %}{% set flag=1 %}{% endif %}{{ hostvars[server].hostname }}{% endfor %}:51070</value>
</property>
<property>
  <name>dfs.namenode.shared.edits.dir</name>
  <value>qjournal://{{ groups['hadoop-datanodes'] | join(":{0};".format("8485")) }}:8485/vfintrahdfs</value>
</property>
<property>
  <name>dfs.journalnode.rpc-address</name>
  <value>0.0.0.0:8485</value>
</property>
<property>
  <name>dfs.journalnode.http-address</name>
  <value>0.0.0.0:8480</value>
</property>
<property>
  <name>dfs.ha.automatic-failover.enabled</name>
  <value>true</value>
</property>
<property>
  <name>dfs.journalnode.edits.dir</name>
  <value>{% for data_dir_parent in hadoop_hdfs['dfs_dir_parent'] %}{% if not loop.first and flag == 1 %},{% else %}{% set flag=1 %}{% endif %}{{ data_dir_parent }}{{ hadoop_hdfs['dfs_dir_namenode'] }}{% endfor %}/journal</value>
</property>
<property>
  <name>dfs.client.failover.proxy.provider.vfintrahdfs</name>
  <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
</property>
<property>
  <name>dfs.ha.fencing.methods</name>
  <value>sshfence
    shell(/bin/true)</value>
  <description>how to communicate in the switch process</description>
</property>
<property>
  <name>dfs.ha.fencing.ssh.private-key-files</name>
  <value>/home/{{ hadoop_user }}/.ssh/id_rsa.v</value>
  <description>the location stored ssh key</description>
</property>
<property>
  <name>dfs.ha.fencing.ssh.connect-timeout</name>
  <value>5000</value>
</property>
<property>
  <name>dfs.datanode.max.xcievers</name>
  <value>4096</value>
</property>
</configuration>